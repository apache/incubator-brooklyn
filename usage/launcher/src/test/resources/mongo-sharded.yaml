#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
name: Sharded MongoDB With Web App
description: Auto-scaling web app backed by MongoDB
location: my-docker-cloud
services:
- type: org.apache.brooklyn.entity.nosql.mongodb.sharding.MongoDBShardedDeployment
  id: mongo
  name: Mongo DB Backend
  brooklyn.config:
    initialRouterClusterSize: 1
    initialShardClusterSize: 5
    shardReplicaSetSize: 3
    coLocatedRouterGroup: $brooklyn:component("webappcluster").attributeWhenReady("controlleddynamicwebappcluster.cluster")

- type: brooklyn.entity.webapp.ControlledDynamicWebAppCluster
  id: webappcluster
  brooklyn.config:
    memberSpec:
      $brooklyn:entitySpec:
        type: org.apache.brooklyn.entity.nosql.mongodb.sharding.CoLocatedMongoDBRouter
        brooklyn.enrichers:
          - type: brooklyn.enricher.basic.Propagator
            brooklyn.config:
              enricher.propagating.sensorMapping:
                $brooklyn:sensor("brooklyn.entity.webapp.jboss.JBoss7Server", "http.port"): $brooklyn:sensor("brooklyn.entity.webapp.jboss.JBoss7Server", "http.port") 
              enricher.producer: $brooklyn:component("child", "appserver")
        brooklyn.config:
          shardedDeployment: $brooklyn:component("mongo")
          siblingSpecs:
          - $brooklyn:entitySpec:
              id: appserver
              type: brooklyn.entity.webapp.jboss.JBoss7Server
              brooklyn.config:
                war: "classpath://brooklyn-example-hello-world-sql-webapp.war"
                java.sysprops:
                  brooklyn.example.mongodb.port: $brooklyn:component("parent", "").attributeWhenReady("mongodb.server.port")
          - $brooklyn:entitySpec:
              type: brooklyn.entity.basic.EmptySoftwareProcess
